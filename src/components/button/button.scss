@import 'reset';
@import 'button.mixins';

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Base styles
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

:host {
  /** @prop --border-radius--small: The small button's border radius. */
  --border-radius--small: var(--sl-form-control-border-radius--small);

  /** @prop --border-radius--medium: The medium button's border radius. */
  --border-radius--medium: var(--sl-form-control-border-radius--medium);

  /** @prop --border-radius--large: The large button's border radius. */
  --border-radius--large: var(--sl-form-control-border-radius--large);

  /** @prop --border-width: The button's border width. */
  --border-width: var(--sl-form-control-border-width);

  /** @prop --default-background-color: The background color to use for default buttons. */
  --default-background-color: var(--sl-form-control-background-color);

  /** @prop --default-border-color: The border color to use for default buttons. */
  --default-border-color: var(--sl-form-control-border-color);

  /** @prop --default-color: The color to use for default buttons. */
  --default-color: var(--sl-form-control-color);

  /** @prop --focus-width: The button's focus ring width in pixels. */
  --focus-ring-width: var(--sl-form-control-focus-ring-width);

  /** @prop --focus-width: The button's focus ring width in pixels. */
  --focus-ring-alpha: var(--sl-form-control-focus-ring-alpha);

  /** @prop --sl-font-family: The button's font family. */
  --sl-font-family: var(--sl-form-control-font-sans-serif);

  /** @prop --sl-font-size--small: The small button's font size. */
  --sl-font-size--small: var(--sl-form-control-font-size--small);

  /** @prop --sl-font-size--medium: The medium button's font size. */
  --sl-font-size--medium: var(--sl-form-control-font-size--medium);

  /** @prop --sl-font-size--large: The large button's font size. */
  --sl-font-size--large: var(--sl-form-control-font-size--large);

  /** @prop --sl-font-weight: The button's font weight. */
  --sl-font-weight: var(--sl-form-control-font-weight);

  /** @prop --height--small: The small button's height. */
  --height--small: var(--sl-form-control-height--small);

  /** @prop --height--medium: The medium button's height. */
  --height--medium: var(--sl-form-control-height--medium);

  /** @prop --height--large: The large button's height. */
  --height--large: var(--sl-form-control-height--large);

  /** @prop --button-padding-x--small: The small button's horizontal padding. */
  --padding-x--small: 16px;

  /** @prop --button-padding-x--medium: The medium button's horizontal padding. */
  --padding-x--medium: 20px;

  /** @prop --button-padding-x--large: The large button's horizontal padding. */
  --padding-x--large: 24px;

  /** @prop --spinner-border-width: The width of the loading button's spinner in pixels. */
  --spinner-border-width: 2px;

  /** @prop --spinner-animation: The animation to use for the loading button's spinner. */
  --spinner-animation: 1s linear infinite spin;

  /** @prop --transition-speed: The button's transition speed for hover, focus, and active effects. */
  --transition-speed: var(--sl-form-control-transition-speed);

  display: inline-block;
}

.sl-button {
  display: flex;
  align-items: center;
  justify-content: center;
  border-style: solid;
  border-width: var(--border-width);
  font-family: var(--sl-font-family);
  font-weight: var(--sl-font-weight);
  user-select: none;
  white-space: nowrap;
  vertical-align: middle;
  transition: var(--transition-speed) background-color, var(--transition-speed) color, var(--transition-speed) border;
  cursor: pointer;

  &::-moz-focus-inner {
    border: 0;
  }

  &:focus {
    outline: none;
  }

  &[disabled] {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .sl-button__prefix {
    ::slotted(*) {
      margin-left: -0.5em;
      margin-right: 0.5em;
    }
  }

  .sl-button__suffix {
    ::slotted(*) {
      margin-left: 0.5em;
      margin-right: -0.5em;
    }
  }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Solid buttons
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

.sl-button:not(.sl-button--outline) {
  &.sl-button--default {
    background-color: var(--default-background-color);
    border-color: var(--default-border-color);
    color: var(--default-color);

    &:hover:not(:disabled) {
      background-color: var(--sl-color-primary-95);
      border-color: var(--sl-color-primary-80);
      color: var(--sl-color-primary-50);
    }

    &:focus:not(:disabled) {
      background-color: var(--sl-color-primary-95);
      border-color: var(--sl-color-primary-70);
      color: var(--sl-color-primary-50);
      box-shadow: 0 0 0 var(--focus-ring-width)
        hsla(var(--sl-color-primary-hue), var(--sl-color-primary-saturation), 50%, var(--focus-ring-alpha));
    }

    &:active:not(:disabled) {
      background-color: var(--sl-color-primary-95);
      border-color: var(--sl-color-primary-60);
      color: var(--sl-color-primary-45);
    }
  }

  &.sl-button--primary {
    @include solid-button(primary);
  }

  &.sl-button--success {
    @include solid-button(success);
  }

  &.sl-button--info {
    @include solid-button(info);
  }

  &.sl-button--warning {
    @include solid-button(warning);
  }

  &.sl-button--danger {
    @include solid-button(danger);
  }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Outline buttons
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

.sl-button.sl-button--outline {
  &.sl-button--default {
    background-color: var(--default-background-color);
    border-color: var(--default-border-color);
    color: var(--default-color);

    &:hover:not(:disabled) {
      border-color: var(--sl-color-primary-60);
      color: var(--sl-color-primary-50);
    }

    &:focus:not(:disabled) {
      border-color: var(--sl-color-primary-60);
      color: var(--sl-color-primary-50);
      box-shadow: 0 0 0 var(--focus-ring-width)
        hsla(var(--sl-color-primary-hue), var(--sl-color-primary-saturation), 50%, var(--focus-ring-alpha));
    }

    &:active:not(:disabled) {
      border-color: var(--sl-color-primary-45);
      color: var(--sl-color-primary-45);
    }
  }

  &.sl-button--primary {
    @include outline-button(primary);
  }

  &.sl-button--success {
    @include outline-button(success);
  }

  &.sl-button--info {
    @include outline-button(info);
  }

  &.sl-button--warning {
    @include outline-button(warning);
  }

  &.sl-button--danger {
    @include outline-button(danger);
  }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Text buttons
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

.sl-button--text {
  background-color: transparent;
  border-color: transparent;
  color: var(--sl-color-primary-50);

  &:hover:not(:disabled) {
    background-color: transparent;
    border-color: transparent;
    color: var(--sl-color-primary-60);
  }

  &:focus:not(:disabled) {
    background-color: transparent;
    border-color: transparent;
    color: var(--sl-color-primary-60);
    box-shadow: 0 0 0 var(--focus-ring-width)
      hsla(var(--sl-color-primary-hue), var(--sl-color-primary-saturation), 50%, var(--focus-ring-alpha));
  }

  &:active:not(:disabled) {
    background-color: transparent;
    border-color: transparent;
    color: var(--sl-color-primary-40);
  }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Block modifier
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

.sl-button--block {
  width: 100%;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Size modifiers
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

.sl-button--small {
  font-size: var(--sl-font-size--small);
  height: var(--height--small);
  line-height: calc(var(--height--small) - var(--border-width) * 2);
  border-radius: var(--border-radius--small);
  padding: 0 var(--padding-x--small);
}

.sl-button--medium {
  font-size: var(--sl-font-size--medium);
  height: var(--height--medium);
  line-height: calc(var(--height--medium) - var(--border-width) * 2);
  border-radius: var(--border-radius--medium);
  padding: 0 var(--padding-x--medium);
}

.sl-button--large {
  font-size: var(--sl-font-size--large);
  height: var(--height--large);
  line-height: calc(var(--height--large) - var(--border-width) * 2);
  border-radius: var(--border-radius--large);
  padding: 0 var(--padding-x--large);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Round modifier
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

.sl-button--round {
  &.sl-button--small {
    border-radius: var(--height--small);
  }

  &.sl-button--medium {
    border-radius: var(--height--medium);
  }

  &.sl-button--large {
    border-radius: var(--height--large);
  }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Circle modifier
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

.sl-button--circle {
  padding-left: 0;
  padding-right: 0;

  &.sl-button--small {
    width: var(--height--small);
    border-radius: 50%;
  }

  &.sl-button--medium {
    width: var(--height--medium);
    border-radius: 50%;
  }

  &.sl-button--large {
    width: var(--height--large);
    border-radius: 50%;
  }

  .sl-button__prefix,
  .sl-button__suffix,
  .sl-button__caret {
    display: none;
  }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Caret modifier
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

.sl-button--caret {
  .sl-button__suffix {
    display: none;
  }

  .sl-button__caret {
    position: relative;
    margin-left: 0.75em;
    margin-right: 0;

    svg {
      position: absolute;
      top: calc(50% - 0.5em);
      left: calc(50% - 0.5em);
      width: 1em;
      height: 1em;
    }
  }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Loading modifier
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

.sl-button--loading {
  position: relative;
  pointer-events: none;

  .sl-button__prefix,
  .sl-button__label,
  .sl-button__suffix,
  .sl-button__caret {
    visibility: hidden;
  }

  .sl-button__spinner {
    position: absolute;
    top: calc(50% - 0.5em);
    left: calc(50% - 0.5em);
    width: 1em;
    height: 1em;
    border: solid var(--spinner-border-width) currentColor;
    border-bottom-color: transparent;
    border-radius: 50%;
    animation: var(--spinner-animation);
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
