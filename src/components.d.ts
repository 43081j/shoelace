/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface SButton {
    /**
    * Set to true to draw a circle button.
    */
    'circle': boolean;
    /**
    * Set to true to disable the button.
    */
    'disabled': boolean;
    /**
    * Set to true to draw the button in a loading state.
    */
    'loading': boolean;
    /**
    * Set to true to draw an outlined button.
    */
    'outline': boolean;
    /**
    * Removes focus from the button.
    */
    'removeFocus': () => Promise<void>;
    /**
    * Set to true to draw a rounded button.
    */
    'round': boolean;
    /**
    * Sets focus on the button.
    */
    'setFocus': () => Promise<void>;
    /**
    * The button's size, one of `small`, `medium`, or `large`.
    */
    'size': string;
    /**
    * The button's type, one of `default`, `primary`, `success`, `info`, `warning`, `danger`, or `text`.
    */
    'type': string;
  }
}

declare global {


  interface HTMLSButtonElement extends Components.SButton, HTMLStencilElement {}
  var HTMLSButtonElement: {
    prototype: HTMLSButtonElement;
    new (): HTMLSButtonElement;
  };
  interface HTMLElementTagNameMap {
    's-button': HTMLSButtonElement;
  }
}

declare namespace LocalJSX {
  interface SButton {
    /**
    * Set to true to draw a circle button.
    */
    'circle'?: boolean;
    /**
    * Set to true to disable the button.
    */
    'disabled'?: boolean;
    /**
    * Set to true to draw the button in a loading state.
    */
    'loading'?: boolean;
    /**
    * Set to true to draw an outlined button.
    */
    'outline'?: boolean;
    /**
    * Set to true to draw a rounded button.
    */
    'round'?: boolean;
    /**
    * The button's size, one of `small`, `medium`, or `large`.
    */
    'size'?: string;
    /**
    * The button's type, one of `default`, `primary`, `success`, `info`, `warning`, `danger`, or `text`.
    */
    'type'?: string;
  }

  interface IntrinsicElements {
    's-button': SButton;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      's-button': LocalJSX.SButton & JSXBase.HTMLAttributes<HTMLSButtonElement>;
    }
  }
}


